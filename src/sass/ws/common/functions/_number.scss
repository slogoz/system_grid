// Number function

@function number($str: '3.14') {

    $strings: '1' '2' '3' '4' '5' '6' '7' '8' '9' '0';
    $numbers: 1 2 3 4 5 6 7 8 9 0;

    $result: 0;
    $minus: false;
    $divider: 0;

    @for $i from 1 through str-length($str) {

        $char: unquote( str-slice( $str, $i, $i ) );
        $index: index( $strings, $char );

        @if $char == '-' and not $minus {
            $minus: true;

        } @else if $char == '.' and $divider == 0 {
            $divider: 1;
        } @else {
            @if not $index {
                // @warn "Unknown character '#{$char}'.";
                $result: if( $minus, $result * -1, $result);
                $result: _length($result, str-slice($str, $i));

                // @debug $result;
                @return $result;
            }
            $num: nth( $numbers, $index );

            @if $divider == 0 {
                $result: $result * 10;

            } @else {
                $divider: $divider * 10;
                $num: $num / $divider;
            }

            $result: $result + $num;
        }
    }

    $result: if( $minus, $result * -1, $result);

    // @debug $result;
    @return $result;
}

@function _length($number, $unit) {
    $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';
    $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;
    $index: index($strings, $unit);

    @if not $index {
        @warn "Unknown unit `#{$unit}`.";
        @return false;
    }

    @return $number * nth($units, $index);
}

// $test: number(); // 3.14

// $test: number('-15'); // -15
// $test: number('-1'); // -1
// $test: number('-.5'); // -.5
// $test: number('-0'); // 0
// $test: number('0'); // 0
// $test: number('.10'); // 0.1
// $test: number('1'); // 1
// $test: number('1.5'); // 1.5
// $test: number('10.'); // 10
// $test: number('12.380'); // 12.38
// $test: number('42'); // 42
// $test: number('1337'); // 1337

// $test: number('-10px'); // -10px
// $test: number('20em'); // 20em
// $test: number('30ch'); // 30ch

// $test: number('1fail'); // Error
// $test: number('string'); // Error
